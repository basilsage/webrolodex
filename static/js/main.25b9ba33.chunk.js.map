{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","contact","name","nextContact","CardList","contacts","map","id","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","this","filteredContacts","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAIaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,WAAWC,IAAI,uEACxB,6BAAKH,EAAMI,QAAQC,OACnB,6BAAKL,EAAMI,QAAQE,kBCFdC,G,MAAW,SAAAP,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACKD,EAAMQ,SAASC,KAAI,SAAAL,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQM,WCNlBC,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCqEjEG,E,kDAhEb,aAAe,IAAD,8BACZ,gBA8BJH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SA7BnC,EAAKC,MAAQ,CACXd,SAAU,CACR,CACEE,GAAI,EACJL,KAAM,YACNC,YAAa,WAEf,CACEI,GAAI,EACJL,KAAM,kBACNC,YAAa,WAEf,CACEI,GAAI,EACJL,KAAM,gBACNC,YAAa,YAGjBa,YAAa,IArBH,E,0CAmCd,WAGE,IAAMX,EAAWe,KAAKD,MAAMd,SACtBW,EAAcI,KAAKD,MAAMH,YAEzBK,EAAmBhB,EAASiB,QAAO,SAAArB,GAAO,OAC5CA,EAAQC,KAAKqB,cAAcC,SAASR,EAAYO,kBAGpD,OACE,sBAAKzB,UAAU,MAAf,UACE,yCACA,cAAC,EAAD,CAAWW,YAAY,cAAcC,aAEjCU,KAAKV,eAGT,cAAC,EAAD,CAAUL,SAAUgB,W,GAvDVI,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.25b9ba33.chunk.js","sourcesContent":["import React from 'react';\n\nimport './card.styles.css'\n\nexport const Card = props => (\n    <div className='card-container'>\n        <img alt='headshot' src='https://www.udemy.com/staticx/udemy/images/v6/logo-coral-light.svg'></img>\n        <h2>{props.contact.name}</h2>\n        <h3>{props.contact.nextContact}</h3>\n    </div>\n)","import React from 'react'\n\nimport { Card } from '../card/card.component.jsx'\n\nimport './card-list.styles.css'\n\nexport const CardList = props => ( \n    <div className='card-list'>\n        {props.contacts.map(contact => (\n            <Card key={contact.id} contact={contact}></Card>\n            )\n        )}\n    </div>\n)\n\n","import React from 'react';\nimport './search-box.styles.css'\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n    <input className='search' type='search' placeholder={placeholder} onChange={handleChange}>\n    </input>\n);","import React, { Component } from 'react';\nimport './App.css';\n\nimport {CardList} from './components/card-list/card-list.component.jsx'\n\nimport {SearchBox} from './components/search-box/search-box.component.jsx'\n\nclass App extends Component {\n  \n  constructor() {\n    super(); // calls constructor method on Component class, gives us access to this.state\n\n    this.state = {\n      contacts: [\n        {\n          id: 0,\n          name: 'Andy Wang',\n          nextContact: '4/21/21'\n        },\n        {\n          id: 1,\n          name: 'Sarah Folkmanis',\n          nextContact: '4/21/21'\n        },\n        {\n          id: 2,\n          name: 'Shane Sandler',\n          nextContact: '4/21/21'\n        }\n      ],\n      searchField: ''\n    }\n  }\n\n  // componentDidMount() {\n  //   fetch(\"http://jsonplaceholder.typicode.com/users\")\n  //   .then(response => response.json())\n  //   .then(users => this.setState({contacts : users}))\n  // }\n  \nhandleChange = e => {\n  this.setState({searchField: e.target.value})\n}\n\n  render() {\n\n    // const {contacts, searchField} = this.state;\n    const contacts = this.state.contacts\n    const searchField = this.state.searchField\n\n    const filteredContacts = contacts.filter(contact => \n        contact.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className='App'>\n        <h1>Rolodex</h1>\n        <SearchBox placeholder='hifromappjs' handleChange= {\n            // e => this.setState({searchField: e.target.value})\n            this.handleChange\n          }>            \n          </SearchBox>\n        <CardList contacts={filteredContacts}>\n        </CardList>\n\n      </div>\n    );\n  }\n}\n\n// function App() {\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}